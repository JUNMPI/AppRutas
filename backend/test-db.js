const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
});

async function testConnection() {
  try {
    console.log('üîÑ Intentando conectar a PostgreSQL...');
    console.log('üìç URL:', process.env.DATABASE_URL);
    
    const result = await pool.query('SELECT NOW()');
    console.log('‚úÖ Conexi√≥n exitosa!');
    console.log('‚è∞ Hora del servidor:', result.rows[0].now);
    
    // Verificar si las tablas existen
    const tables = await pool.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
    `);
    
    console.log('\nüìä Tablas en la base de datos:');
    if (tables.rows.length === 0) {
      console.log('  ‚ö†Ô∏è No hay tablas - necesitas ejecutar el script SQL');
    } else {
      tables.rows.forEach(row => {
        console.log('  ‚úì ' + row.table_name);
      });
    }
    
    // Contar usuarios
    try {
      const users = await pool.query('SELECT COUNT(*) FROM users');
      console.log('\nüë• Usuarios en la BD:', users.rows[0].count);
    } catch (e) {
      console.log('\n‚ö†Ô∏è La tabla users no existe a√∫n');
      console.log('   Ejecuta el script SQL desde pgAdmin o con:');
      console.log('   psql -U postgres -d apprutas -f src/sql/init.sql');
    }
    
  } catch (error) {
    console.error('‚ùå Error de conexi√≥n:', error.message);
    console.log('\nüí° Sugerencias:');
    console.log('1. Verifica que PostgreSQL est√© corriendo');
    console.log('2. Verifica la contrase√±a en el archivo .env');
    console.log('3. Aseg√∫rate de que la base de datos "apprutas" exista');
  } finally {
    await pool.end();
  }
}

testConnection();